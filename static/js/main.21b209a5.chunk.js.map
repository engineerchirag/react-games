{"version":3,"sources":["logo.svg","TicTacToe.js","App.js","reportWebVitals.js","index.js"],"names":["calculateWinner","squares","lines","i","length","a","b","c","Game","useState","xIsNext","state","setState","Square","value","onClick","className","renderSquare","slice","s","handleClick","Board","GameStatus","winner","Title","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"0LAAe,I,yBCGTA,EAAkB,SAACC,GAWrB,IAVA,IAAMC,EAAQ,CACZ,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,IAEAC,EAAI,EAAGA,EAAID,EAAME,OAAQD,IAAK,CAAC,IAAD,cACnBD,EAAMC,GADa,GAC9BE,EAD8B,KAC3BC,EAD2B,KACxBC,EADwB,KAErC,GAAIN,EAAQI,IAAMJ,EAAQI,KAAOJ,EAAQK,IAAML,EAAQI,KAAOJ,EAAQM,GACpE,OAAON,EAAQI,GAGnB,OAAO,MAkFMG,EA9EF,WAAO,IAAD,EACSC,mBAAS,CACjCR,QAAS,GACTS,SAAS,IAHM,mBACVC,EADU,KACHC,EADG,KAoBXC,EAAS,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAOC,EAAV,EAAUA,QAAV,OACX,wBAAQC,UAAU,SAASD,QAASA,EAApC,SACGD,KAIDG,EAAe,SAACd,GAAD,OACnB,cAACU,EAAD,CACIC,MAAOH,EAAMV,QAAQE,GACrBY,QAAS,kBAvBK,SAACZ,GACnB,IAAMF,EAAUU,EAAMV,QAAQiB,QACflB,EAAgBC,IAChBA,EAAQE,KAGvBF,EAAQE,GAAKQ,EAAMD,QAAU,IAAM,IACnCE,GAAS,SAAAO,GAAC,kCACLA,GADK,IAERlB,UACAS,SAAUS,EAAET,cAaKU,CAAYjB,OAI3BkB,EAAQ,kBACZ,sBAAKL,UAAU,QAAf,UACI,sBAAKA,UAAU,YAAf,UACGC,EAAa,GACbA,EAAa,GACbA,EAAa,MAEhB,sBAAKD,UAAU,YAAf,UACGC,EAAa,GACbA,EAAa,GACbA,EAAa,MAEhB,sBAAKD,UAAU,YAAf,UACGC,EAAa,GACbA,EAAa,GACbA,EAAa,UAKhBK,EAAa,WACf,IAAMC,EAASvB,EAAgBW,EAAMV,SACrC,OAAKsB,EAID,qBAAKP,UAAU,YAAf,SACA,2CAAcO,OAJP,MASTC,EAAQ,kBACV,8CAGJ,OACE,sBAAKR,UAAU,OAAf,UACE,cAACQ,EAAD,IACA,cAACH,EAAD,IACA,cAACC,EAAD,QCjEOG,EATH,WACV,OACE,qBAAKT,UAAU,MAAf,SAEE,cAAC,EAAD,OCfSU,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K","file":"static/js/main.21b209a5.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React, { useState } from 'react';\nimport './App.css';\n\nconst calculateWinner = (squares) => {\n    const lines = [\n      [0, 1, 2],\n      [3, 4, 5],\n      [6, 7, 8],\n      [0, 3, 6],\n      [1, 4, 7],\n      [2, 5, 8],\n      [0, 4, 8],\n      [2, 4, 6]\n    ];\n    for (let i = 0; i < lines.length; i++) {\n      const [a, b, c] = lines[i];\n      if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\n        return squares[a];\n      }\n    }\n    return null;\n  };\n\n  \n  const Game = () => {\n    const [state, setState] = useState({\n      squares: [],\n      xIsNext: false,\n    });\n  \n    const handleClick = (i) => {\n      const squares = state.squares.slice();\n      const winner = calculateWinner(squares);\n      if ( winner || squares[i]) {\n        return;\n      }\n      squares[i] = state.xIsNext ? \"X\" : \"O\";\n      setState(s => ({\n        ...s,\n        squares,\n        xIsNext: !s.xIsNext,\n      }));\n    }\n\n    const Square = ({ value, onClick}) => (\n        <button className=\"square\" onClick={onClick}>\n          {value}\n        </button>\n    );\n  \n    const renderSquare = (i) => (\n      <Square\n          value={state.squares[i]}\n          onClick={() => handleClick(i)}\n        />\n    );\n  \n    const Board = () => (\n      <div className='board'>\n          <div className=\"board-row\">\n            {renderSquare(0)}\n            {renderSquare(1)}\n            {renderSquare(2)}\n          </div>\n          <div className=\"board-row\">\n            {renderSquare(3)}\n            {renderSquare(4)}\n            {renderSquare(5)}\n          </div>\n          <div className=\"board-row\">\n            {renderSquare(6)}\n            {renderSquare(7)}\n            {renderSquare(8)}\n          </div>\n      </div>\n    );\n\n    const GameStatus = () => {\n        const winner = calculateWinner(state.squares);\n        if (!winner) {\n            return null;\n        }\n        return (\n            <div className=\"game-info\">\n            <div>Winner: {winner}</div>\n            </div>\n        );\n    };\n\n    const Title = () => (\n        <h1>Tic Tac Toe</h1>\n    );\n  \n    return (\n      <div className='game'>\n        <Title />\n        <Board />\n        <GameStatus/>\n      </div>\n    )\n  };\n\n  export default Game;","import React, { useState } from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport Game from './TicTacToe';\n\n\nconst LearReact = () => (\n  <div>\n    <img src={logo} className=\"App-logo\" alt=\"logo\" />\n    <p>\n      Edit <code>src/App.js</code> and save to reload.\n    </p>\n    <a\n      className=\"App-link\"\n      href=\"https://reactjs.org\"\n      target=\"_blank\"\n      rel=\"noopener noreferrer\"\n    >\n      Learn React\n    </a>\n  </div>\n);\n\nconst App = () => {\n  return (\n    <div className=\"App\">\n      {/* <LearReact /> */}\n      <Game />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}